defmodule Cineaste.Repo.Migrations.AddPersonRelationships do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:person_relatives, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :relationship, :text, null: false
      add :order, :bigint, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :self_id,
          references(:people,
            column: :id,
            name: "person_relatives_self_id_fkey",
            type: :uuid,
            prefix: "public",
            on_delete: :delete_all
          )

      add :relative_id,
          references(:people,
            column: :id,
            name: "person_relatives_relative_id_fkey",
            type: :uuid,
            prefix: "public",
            on_delete: :delete_all
          )
    end

    create unique_index(:person_relatives, [:self_id, :relative_id],
             name: "person_relatives_unique_by_self_and_relative_index"
           )

    alter table(:person_aliases) do
      modify :alias, :text, null: false
    end
  end

  def down do
    alter table(:person_aliases) do
      modify :alias, :text, null: true
    end

    drop_if_exists unique_index(:person_relatives, [:self_id, :relative_id],
                     name: "person_relatives_unique_by_self_and_relative_index"
                   )

    drop constraint(:person_relatives, "person_relatives_self_id_fkey")

    drop constraint(:person_relatives, "person_relatives_relative_id_fkey")

    drop table(:person_relatives)
  end
end
